server:
  port: 8005

eureka:
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:localhost}:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    prefer-ip-address: true

spring:
  application:
    name: booking-service
  datasource:
    url: jdbc:h2:mem:bookingdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true

resilience4j:
  circuitbreaker:
    instances:
      roomService:
        registerHealthIndicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 3
        permittedNumberOfCallsInHalfOpenState: 6
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: COUNT_BASED
        ignoreExceptions:
          - feign.FeignException$NotFound
  timelimiter:
    instances:
      roomService:
        timeout-duration: 2s
  retry:
    instances:
      roomService:
        max-attempts: 3
        wait-duration: 500ms

  ratelimiter:
    instances:
      bookingService:
        timeout-duration: 0
        limit-for-period: 10
        limit-refresh-period: 1s

management:
  endpoints:
    web:
      exposure:
        include:
          - shutdown
          - health
  endpoint:
    shutdown:
      access: unrestricted
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
